#include<bits/stdc++.h>
int longestIncreasingSubsequence(int arr[], int n)
{
    int maxi=1;
    vector<int>ans;
    ans.push_back(arr[0]);
    for(int i=1;i<n;i++)
    {
        if(arr[i]>(ans.back()))
        {
            ans.push_back(arr[i]);
            maxi++;
        }
        else
        {
            auto it=lower_bound(ans.begin(),ans.end(),arr[i])-ans.begin();
            ans[it]=arr[i];
        }
    }
    return maxi;
    
}
int main()
{
int n=6;
int a[n]={1,3,2,4,5,6,0};
cout<<longestIncreasingSubsequence(a,n);
return 0;
}

//O(NLOGN) solution
