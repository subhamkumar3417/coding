#include<bits/stdc++.h>
using namespace std;
int longestIncreasingSubsequence(int arr[], int n)
{
    int maxi=INT_MIN;
    vector<int>aux(n,1);
    for(int i=0;i<n;i++)
    {
        for(int j=i-1;j>=0;j--)
        {
            if(arr[i]>arr[j])
            {
                aux[i]=max(aux[i],aux[j]+1);
            }
        }
    }
    return *max_element(aux.begin(),aux.end());
}
int main()
{

int n=6;
int a[n]={1,3,2,4,5,0};
cout<<longestIncreasingSubsequence(a,n)<<endl;//4 in this case

return 0;
}

//O(N^2) solution
space- o(N)
